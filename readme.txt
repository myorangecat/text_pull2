AMB数据运维软件（一期）
背景
围绕国产硬件、操作系统及数据库、中间件，实现智能化信息处理，服务于政务、企事业单位和各类组织，针对硬件及操作系统实时状态的时间序列数据异常检测展开研究。
智能运维中时间序列异常检测的研究，是目前时序数据分析最成熟的应用之一，主要从正常的时间序列中识别不正常的数据的过程。时序数据异常点是指序列中模式存在不一致的点（如突然的上升或下降，趋势改变，层级变换，超出历史最大值/最小值）。

目标
1、在PK体系下（可用Linux代替）完成单台设备的硬件及操作系统实时状态采集。
2、使用Vue框架搭建软件的前端，能够完成基本功能。
3、使用Spring Boot搭建软件的后端，能够大致实现接口功能。
4、使用基础无监督的机器学习算法k-means完成聚类操作。

软件一期内容
1、框架构建：
	使用Webpack工具构建Vue前端项目（名称暂定AMB-web），使用npm或者yarn管理软件包，开发工具使用正版软件（Visual Studio Code、Atom等，不要使用WebStorm）。环境在Linux或者Windows均可；
	使用Spring Boot搭建后台项目（名称暂定AMB），使用Maven或者Gradle管理依赖，要求能够连接数据库，名称为amb。开发工具选择正版软件（IntelliJ IDEA社区版等，不要使用破解版）。环境在Linux或者Windows均可；
	使用Gitee管理代码仓库，学习git指令并使用特性/发布模型（后面会讲）。

2、登录模块：
	完成登录页面的前端绘制，具体样式可参考（ctrl c + ctrl v）vue-emelent-admin项目（一期先“参考”，二期再修改）；
	完成用户验证流程后台开发，可以参考wgcloud和el-admin等项目对于用户登录的实现，完成entity和验证等功能；
	登录token验证（token原理、session和cookie与token的异同、验证方式），实现登录、登出功能。

3、Router模块：
	路由和侧边栏的页面搭建，其中侧边栏暂定为3个目录：系统监控、运维管理、报警配置，tab栏内容暂定为：登出；
	初步实现路由功能，先写3个页面（“Hello 系统监控”，“Hello 运维管理”，“Hello 报警配置”），能够点击目录栏实现页面切换并请求服务器数据；
	后台实现数据回调，在接受到前端的请求后分别返回页面名称。

4、展示功能：
	搭建table页面，实现类似vue-element-admin中inline-edit-table页面的效果。其中各列依次为：序号、系统、IP、更新时间、备注、操作；
	搭建chart页面，实现类似vue-element-admin中mix-chart页面的效果。其中数据先mock；
	搭建服务器状态页面，实现https://el-admin.xin/monitor/server中“状态”一栏的效果；
	数据库中创建CPU利用率、内存使用率等数据的表，后台使用Mybatis，能够从数据库表中读取值并返回。

5、前端基础服务：
	参考vue-element-admin项目，使用Vuex储存用户数据，提供相应的工具接口；
	参考vue-element-admin项目，使用Axios封装网络请求接口。


6、系统监控：
	调研线程池使用，设定每五分钟触发一次任务；
	研系统监控实现方法（oshi 、sigar），使用合适的框架每五分钟采集一次数据。

7、机器学习：
	学习Python语言，学习基础语法；
	学习机器学习无监督算法部分，寻找k-means算法的demo并运行；
	研究论文，理解服务器异常检测的步骤。
